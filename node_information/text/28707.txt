    #Index Search CALCEPH - Fortran 2003 language 3.4.0 documentation
   Release notes Miscellaneous functions

   CALCEPH - Fortran 2003 language
   3.4.0
   ____________________
     * Introduction
     * Installation
     * Library interface
     * Multiple file access functions
     * Single file access functions
     * Error functions
     * Miscellaneous functions
     * NAIF identification numbers
          + Sun and planetary barycenters
          + Coordinate Time ephemerides
          + Planet centers and satellites
          + Comets
     * Release notes
     * Reporting bugs
     * CALCEPH Library Copying conditions

   Index

   CALCEPH - Fortran 2003 language
     * Docs »
     * NAIF identification numbers
     *
     __________________________________________________________________

NAIF identification numbers¶

   The following predefined values must be used as the target body and
   origin of the coordinate system with the functions
   calceph_compute_unit(), calceph_orient_unit() calceph_compute_order()
   or calceph_orient_order() if and only if the value CALCEPH_USE_NAIFID
   has been set in the parameter unit.

   This list is already predefined in the module file calceph.mod.

Sun and planetary barycenters¶

         Predefined Macros        NAIF ID          Name
   NAIFID_SOLAR_SYSTEM_BARYCENTER 0       Solar System Barycenter
   NAIFID_MERCURY_BARYCENTER      1       Mercury Barycenter
   NAIFID_VENUS_BARYCENTER        2       Venus Barycenter
   NAIFID_EARTH_MOON_BARYCENTER   3       Earth-Moon Barycenter
   NAIFID_MARS_BARYCENTER         4       Mars Barycenter
   NAIFID_JUPITER_BARYCENTER      5       Jupiter Barycenter
   NAIFID_SATURN_BARYCENTER       6       Saturn Barycenter
   NAIFID_URANUS_BARYCENTER       7       Uranus Barycenter
   NAIFID_NEPTUNE_BARYCENTER      8       Neptune Barycenter
   NAIFID_PLUTO_BARYCENTER        9       Pluto Barycenter
   NAIFID_SUN                     10      Sun

Coordinate Time ephemerides¶

   Predefined Macros NAIF ID Name
   NAIFID_TIME_CENTER 1000000000 center ID for Coordinate Time ephemerides
   [1]
   NAIFID_TIME_TTMTDB 1000000001 Coordinate Time ephemeride TT-TDB [2]
   NAIFID_TIME_TCGMTCB 1000000002 Coordinate Time ephemeride TCG-TCB [2]
   [1] These values must only be used as a center body.
   [2] (1, 2) These values must only be used as a target body.

Planet centers and satellites¶

   Predefined Macros NAIF ID    Name
   NAIFID_MERCURY    199     Mercury

   NAIFID_VENUS      299     Venus

   NAIFID_EARTH      399     Earth
   NAIFID_MOON       301     Moon

   NAIFID_MARS       499     Mars
   NAIFID_PHOBOS     401     Phobos
   NAIFID_DEIMOS     402     Deimos

   NAIFID_JUPITER    599     Jupiter
   NAIFID_IO         501     Io
   NAIFID_EUROPA     502     Europa
   NAIFID_GANYMEDE   503     Ganymede
   NAIFID_CALLISTO   504     Callisto
   NAIFID_AMALTHEA   505     Amalthea
   NAIFID_HIMALIA    506     Himalia
   NAIFID_ELARA      507     Elara
   NAIFID_PASIPHAE   508     Pasiphae
   NAIFID_SINOPE     509     Sinope
   NAIFID_LYSITHEA   510     Lysithea
   NAIFID_CARME      511     Carme
   NAIFID_ANANKE     512     Ananke
   NAIFID_LEDA       513     Leda
   NAIFID_THEBE      514     Thebe
   NAIFID_ADRASTEA   515     Adrastea
   NAIFID_METIS      516     Metis
   NAIFID_CALLIRRHOE 517     Callirrhoe
   NAIFID_THEMISTO   518     Themisto
   NAIFID_MAGACLITE  519     Magaclite
   NAIFID_TAYGETE    520     Taygete
   NAIFID_CHALDENE   521     Chaldene
   NAIFID_HARPALYKE  522     Harpalyke
   NAIFID_KALYKE     523     Kalyke
   NAIFID_IOCASTE    524     Iocaste
   NAIFID_ERINOME    525     Erinome
   NAIFID_ISONOE     526     Isonoe
   NAIFID_PRAXIDIKE  527     Praxidike
   NAIFID_AUTONOE    528     Autonoe
   NAIFID_THYONE     529     Thyone
   NAIFID_HERMIPPE   530     Hermippe
   NAIFID_AITNE      531     Aitne
   NAIFID_EURYDOME   532     Eurydome
   NAIFID_EUANTHE    533     Euanthe
   NAIFID_EUPORIE    534     Euporie
   NAIFID_ORTHOSIE   535     Orthosie
   NAIFID_SPONDE     536     Sponde
   NAIFID_KALE       537     Kale
   NAIFID_PASITHEE   538     Pasithee
   NAIFID_HEGEMONE   539     Hegemone
   NAIFID_MNEME      540     Mneme
   NAIFID_AOEDE      541     Aoede
   NAIFID_THELXINOE  542     Thelxinoe
   NAIFID_ARCHE      543     Arche
   NAIFID_KALLICHORE 544     Kallichore
   NAIFID_HELIKE     545     Helike
   NAIFID_CARPO      546     Carpo
   NAIFID_EUKELADE   547     Eukelade
   NAIFID_CYLLENE    548     Cyllene
   NAIFID_KORE       549     Kore
   NAIFID_HERSE      550     Herse
   NAIFID_DIA        553     Dia

   NAIFID_SATURN     699     Saturn
   NAIFID_MIMAS      601     Mimas
   NAIFID_ENCELADUS  602     Enceladus
   NAIFID_TETHYS     603     Tethys
   NAIFID_DIONE      604     Dione
   NAIFID_RHEA       605     Rhea
   NAIFID_TITAN      606     Titan
   NAIFID_HYPERION   607     Hyperion
   NAIFID_IAPETUS    608     Iapetus
   NAIFID_PHOEBE     609     Phoebe
   NAIFID_JANUS      610     Janus
   NAIFID_EPIMETHEUS 611     Epimetheus
   NAIFID_HELENE     612     Helene
   NAIFID_TELESTO    613     Telesto
   NAIFID_CALYPSO    614     Calypso
   NAIFID_ATLAS      615     Atlas
   NAIFID_PROMETHEUS 616     Prometheus
   NAIFID_PANDORA    617     Pandora
   NAIFID_PAN        618     Pan
   NAIFID_YMIR       619     Ymir
   NAIFID_PAALIAQ    620     Paaliaq
   NAIFID_TARVOS     621     Tarvos
   NAIFID_IJIRAQ     622     Ijiraq
   NAIFID_SUTTUNGR   623     Suttungr
   NAIFID_KIVIUQ     624     Kiviuq
   NAIFID_MUNDILFARI 625     Mundilfari
   NAIFID_ALBIORIX   626     Albiorix
   NAIFID_SKATHI     627     Skathi
   NAIFID_ERRIAPUS   628     Erriapus
   NAIFID_SIARNAQ    629     Siarnaq
   NAIFID_THRYMR     630     Thrymr
   NAIFID_NARVI      631     Narvi
   NAIFID_METHONE    632     Methone
   NAIFID_PALLENE    633     Pallene
   NAIFID_POLYDEUCES 634     Polydeuces
   NAIFID_DAPHNIS    635     Daphnis
   NAIFID_AEGIR      636     Aegir
   NAIFID_BEBHIONN   637     Bebhionn
   NAIFID_BERGELMIR  638     Bergelmir
   NAIFID_BESTLA     639     Bestla
   NAIFID_FARBAUTI   640     Farbauti
   NAIFID_FENRIR     641     Fenrir
   NAIFID_FORNJOT    642     Fornjot
   NAIFID_HATI       643     Hati
   NAIFID_HYROKKIN   644     Hyrokkin
   NAIFID_KARI       645     Kari
   NAIFID_LOGE       646     Loge
   NAIFID_SKOLL      647     Skoll
   NAIFID_SURTUR     648     Surtur
   NAIFID_ANTHE      649     Anthe
   NAIFID_JARNSAXA   650     Jarnsaxa
   NAIFID_GREIP      651     Greip
   NAIFID_TARQEQ     652     Tarqeq
   NAIFID_AEGAEON    653     Aegaeon

   NAIFID_URANUS     799     Uranus
   NAIFID_ARIEL      701     Ariel
   NAIFID_UMBRIEL    702     Umbriel
   NAIFID_TITANIA    703     Titania
   NAIFID_OBERON     704     Oberon
   NAIFID_MIRANDA    705     Miranda
   NAIFID_CORDELIA   706     Cordelia
   NAIFID_OPHELIA    707     Ophelia
   NAIFID_BIANCA     708     Bianca
   NAIFID_CRESSIDA   709     Cressida
   NAIFID_DESDEMONA  710     Desdemona
   NAIFID_JULIET     711     Juliet
   NAIFID_PORTIA     712     Portia
   NAIFID_ROSALIND   713     Rosalind
   NAIFID_BELINDA    714     Belinda
   NAIFID_PUCK       715     Puck
   NAIFID_CALIBAN    716     Caliban
   NAIFID_SYCORAX    717     Sycorax
   NAIFID_PROSPERO   718     Prospero
   NAIFID_SETEBOS    719     Setebos
   NAIFID_STEPHANO   720     Stephano
   NAIFID_TRINCULO   721     Trinculo
   NAIFID_FRANCISCO  722     Francisco
   NAIFID_MARGARET   723     Margaret
   NAIFID_FERDINAND  724     Ferdinand
   NAIFID_PERDITA    725     Perdita
   NAIFID_MAB        726     Mab
   NAIFID_CUPID      727     Cupid

   NAIFID_NEPTUNE    899     Neptune
   NAIFID_TRITON     801     Triton
   NAIFID_NEREID     802     Nereid
   NAIFID_NAIAD      803     Naiad
   NAIFID_THALASSA   804     Thalassa
   NAIFID_DESPINA    805     Despina
   NAIFID_GALATEA    806     Galatea
   NAIFID_LARISSA    807     Larissa
   NAIFID_PROTEUS    808     Proteus
   NAIFID_HALIMEDE   809     Halimede
   NAIFID_PSAMATHE   810     Psamathe
   NAIFID_SAO        811     Sao
   NAIFID_LAOMEDEIA  812     Laomedeia
   NAIFID_NESO       813     Neso

   NAIFID_PLUTO      999     Pluto
   NAIFID_CHARON     901     Charon
   NAIFID_NIX        902     Nix
   NAIFID_HYDRA      903     Hydra
   NAIFID_KERBEROS   904     Kerberos
   NAIFID_STYX       905     Styx

Comets¶

         Predefined Macros        NAIF ID          Name
   NAIFID_AREND                   1000001 Arend
   NAIFID_AREND_RIGAUX            1000002 Arend-Rigaux
   NAIFID_ASHBROOK_JACKSON        1000003 Ashbrook-Jackson
   NAIFID_BOETHIN                 1000004 Boethin
   NAIFID_BORRELLY                1000005 Borrelly
   NAIFID_BOWELL_SKIFF            1000006 Bowell-Skiff
   NAIFID_BRADFIELD               1000007 Bradfield
   NAIFID_BROOKS_2                1000008 Brooks 2
   NAIFID_BRORSEN_METCALF         1000009 Brorsen-Metcalf
   NAIFID_BUS                     1000010 Bus
   NAIFID_CHERNYKH                1000011 Chernykh
   NAIFID_CHURYUMOV_GERASIMENKO   1000012 Churyumov-Gerasimenko
   NAIFID_CIFFREO                 1000013 Ciffreo
   NAIFID_CLARK                   1000014 Clark
   NAIFID_COMAS_SOLA              1000015 Comas Sola
   NAIFID_CROMMELIN               1000016 Crommelin
   NAIFID_D__ARREST               1000017 D''Drrest
   NAIFID_DANIEL                  1000018 Daniel
   NAIFID_DE_VICO_SWIFT           1000019 De Vico-Swift
   NAIFID_DENNING_FUJIKAWA        1000020 Denning-Fujikawa
   NAIFID_DU_TOIT_1               1000021 Du Toit 1
   NAIFID_DU_TOIT_HARTLEY         1000022 Du Toit-Hartley
   NAIFID_DUTOIT_NEUJMIN_DELPORTE 1000023 Dutoit-Neujmin-Delporte
   NAIFID_DUBIAGO                 1000024 Dubiago
   NAIFID_ENCKE                   1000025 Encke
   NAIFID_FAYE                    1000026 Faye
   NAIFID_FINLAY                  1000027 Finlay
   NAIFID_FORBES                  1000028 Forbes
   NAIFID_GEHRELS_1               1000029 Gehrels 1
   NAIFID_GEHRELS_2               1000030 Gehrels 2
   NAIFID_GEHRELS_3               1000031 Gehrels 3
   NAIFID_GIACOBINI_ZINNER        1000032 Giacobini-Zinner
   NAIFID_GICLAS                  1000033 Giclas
   NAIFID_GRIGG_SKJELLERUP        1000034 Grigg-Skjellerup
   NAIFID_GUNN                    1000035 Gunn
   NAIFID_HALLEY                  1000036 Halley
   NAIFID_HANEDA_CAMPOS           1000037 Haneda-Campos
   NAIFID_HARRINGTON              1000038 Harrington
   NAIFID_HARRINGTON_ABELL        1000039 Harrington-Abell
   NAIFID_HARTLEY_1               1000040 Hartley 1
   NAIFID_HARTLEY_2               1000041 Hartley 2
   NAIFID_HARTLEY_IRAS            1000042 Hartley-Iras
   NAIFID_HERSCHEL_RIGOLLET       1000043 Herschel-Rigollet
   NAIFID_HOLMES                  1000044 Holmes
   NAIFID_HONDA_MRKOS_PAJDUSAKOVA 1000045 Honda-Mrkos-Pajdusakova
   NAIFID_HOWELL                  1000046 Howell
   NAIFID_IRAS                    1000047 Iras
   NAIFID_JACKSON_NEUJMIN         1000048 Jackson-Neujmin
   NAIFID_JOHNSON                 1000049 Johnson
   NAIFID_KEARNS_KWEE             1000050 Kearns-Kwee
   NAIFID_KLEMOLA                 1000051 Klemola
   NAIFID_KOHOUTEK                1000052 Kohoutek
   NAIFID_KOJIMA                  1000053 Kojima
   NAIFID_KOPFF                   1000054 Kopff
   NAIFID_KOWAL_1                 1000055 Kowal 1
   NAIFID_KOWAL_2                 1000056 Kowal 2
   NAIFID_KOWAL_MRKOS             1000057 Kowal-Mrkos
   NAIFID_KOWAL_VAVROVA           1000058 Kowal-Vavrova
   NAIFID_LONGMORE                1000059 Longmore
   NAIFID_LOVAS_1                 1000060 Lovas 1
   NAIFID_MACHHOLZ                1000061 Machholz
   NAIFID_MAURY                   1000062 Maury
   NAIFID_NEUJMIN_1               1000063 Neujmin 1
   NAIFID_NEUJMIN_2               1000064 Neujmin 2
   NAIFID_NEUJMIN_3               1000065 Neujmin 3
   NAIFID_OLBERS                  1000066 Olbers
   NAIFID_PETERS_HARTLEY          1000067 Peters-Hartley
   NAIFID_PONS_BROOKS             1000068 Pons-Brooks
   NAIFID_PONS_WINNECKE           1000069 Pons-Winnecke
   NAIFID_REINMUTH_1              1000070 Reinmuth 1
   NAIFID_REINMUTH_2              1000071 Reinmuth 2
   NAIFID_RUSSELL_1               1000072 Russell 1
   NAIFID_RUSSELL_2               1000073 Russell 2
   NAIFID_RUSSELL_3               1000074 Russell 3
   NAIFID_RUSSELL_4               1000075 Russell 4
   NAIFID_SANGUIN                 1000076 Sanguin
   NAIFID_SCHAUMASSE              1000077 Schaumasse
   NAIFID_SCHUSTER                1000078 Schuster
   NAIFID_SCHWASSMANN_WACHMANN_1  1000079 Schwassmann-Wachmann 1
   NAIFID_SCHWASSMANN_WACHMANN_2  1000080 Schwassmann-Wachmann 2
   NAIFID_SCHWASSMANN_WACHMANN_3  1000081 Schwassmann-Wachmann 3
   NAIFID_SHAJN_SCHALDACH         1000082 Shajn-Schaldach
   NAIFID_SHOEMAKER_1             1000083 Shoemaker 1
   NAIFID_SHOEMAKER_2             1000084 Shoemaker 2
   NAIFID_SHOEMAKER_3             1000085 Shoemaker 3
   NAIFID_SINGER_BREWSTER         1000086 Singer-Brewster
   NAIFID_SLAUGHTER_BURNHAM       1000087 Slaughter-Burnham
   NAIFID_SMIRNOVA_CHERNYKH       1000088 Smirnova-Chernykh
   NAIFID_STEPHAN_OTERMA          1000089 Stephan-Oterma
   NAIFID_SWIFT_GEHRELS           1000090 Swift-Gehrels
   NAIFID_TAKAMIZAWA              1000091 Takamizawa
   NAIFID_TAYLOR                  1000092 Taylor
   NAIFID_TEMPEL_1                1000093 Tempel 1
   NAIFID_TEMPEL_2                1000094 Tempel 2
   NAIFID_TEMPEL_TUTTLE           1000095 Tempel-Tuttle
   NAIFID_TRITTON                 1000096 Tritton
   NAIFID_TSUCHINSHAN_1           1000097 Tsuchinshan 1
   NAIFID_TSUCHINSHAN_2           1000098 Tsuchinshan 2
   NAIFID_TUTTLE                  1000099 Tuttle
   NAIFID_TUTTLE_GIACOBINI_KRESAK 1000100 Tuttle-Giacobini-Kresak
   NAIFID_VAISALA_1               1000101 Vaisala 1
   NAIFID_VAN_BIESBROECK          1000102 Van Biesbroeck
   NAIFID_VAN_HOUTEN              1000103 Van Houten
   NAIFID_WEST_KOHOUTEK_IKEMURA   1000104 West-Kohoutek-Ikemura
   NAIFID_WHIPPLE                 1000105 Whipple
   NAIFID_WILD_1                  1000106 Wild 1
   NAIFID_WILD_2                  1000107 Wild 2
   NAIFID_WILD_3                  1000108 Wild 3
   NAIFID_WIRTANEN                1000109 Wirtanen
   NAIFID_WOLF                    1000110 Wolf
   NAIFID_WOLF_HARRINGTON         1000111 Wolf-Harrington
   NAIFID_LOVAS_2                 1000112 Lovas 2
   NAIFID_URATA_NIIJIMA           1000113 Urata-Niijima
   NAIFID_WISEMAN_SKIFF           1000114 Wiseman-Skiff
   NAIFID_HELIN                   1000115 Helin
   NAIFID_MUELLER                 1000116 Mueller
   NAIFID_SHOEMAKER_HOLT_1        1000117 Shoemaker-Holt 1
   NAIFID_HELIN_ROMAN_CROCKETT    1000118 Helin-Roman-Crockett
   NAIFID_HARTLEY_3               1000119 Hartley 3
   NAIFID_PARKER_HARTLEY          1000120 Parker-Hartley
   NAIFID_HELIN_ROMAN_ALU_1       1000121 Helin-Roman-Alu 1
   NAIFID_WILD_4                  1000122 Wild 4
   NAIFID_MUELLER_2               1000123 Mueller 2
   NAIFID_MUELLER_3               1000124 Mueller 3
   NAIFID_SHOEMAKER_LEVY_1        1000125 Shoemaker-Levy 1
   NAIFID_SHOEMAKER_LEVY_2        1000126 Shoemaker-Levy 2
   NAIFID_HOLT_OLMSTEAD           1000127 Holt-Olmstead
   NAIFID_METCALF_BREWINGTON      1000128 Metcalf-Brewington
   NAIFID_LEVY                    1000129 Levy
   NAIFID_SHOEMAKER_LEVY_9        1000130 Shoemaker-Levy 9
   NAIFID_HYAKUTAKE               1000131 Hyakutake
   NAIFID_HALE_BOPP               1000132 Hale-Bopp
   NAIFID_SIDING_SPRING           1003228 Siding Spring

   Next Previous
     __________________________________________________________________

   © Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
   2018, 2019, CNRS, Observatoire de Paris, Observatoire de la Côte
   d'Azur.
    #Index Search CALCEPH - Fortran 2003 language 3.4.0 documentation
   Reporting bugs NAIF identification numbers

   CALCEPH - Fortran 2003 language
   3.4.0
   ____________________
     * Introduction
     * Installation
     * Library interface
     * Multiple file access functions
     * Single file access functions
     * Error functions
     * Miscellaneous functions
     * NAIF identification numbers
     * Release notes
     * Reporting bugs
     * CALCEPH Library Copying conditions

   Index

   CALCEPH - Fortran 2003 language
     * Docs »
     * Release notes
     *
     __________________________________________________________________

Release notes¶

     *

        Version 3.4.0
                Add the function calceph_isthreadsafe.

                Multiple threads can now access the same ephemeris
                descriptor if the function calceph_isthreadsafe returns 1.

                Fortran and C examples (f2003parallel.f, cparallel.c),
                written using OpenMP, are available in the folder
                examples.

                Fix an error if multiple SPICE kernels are loaded for the
                same objects over different time-span.

                Fix the MinGW Makefiles if the variable MAKE contains
                spaces.

                Support the segment 5 and 18 in the SPICE kernel file.

                Support the euler angles for the orientation stored in a
                text PCK files (BODY..._POLE_RA, BODY..._POLE_DE,
                BODY..._POLE_PM, BODY..._NUT_PREC_...).

                Support the frame 17 (ECLIPJ2000) in the SPICE kernel
                file.

                Add the utilities calceph_queryposition and
                calceph_queryorientation.

     *

        Version 3.3.1
                Fix the installation with python 3.7.0 or later.

                Fix the installation with python and pip on Windows
                operating system.

                Add the missing file pythonapi/src/Makefile.mingw for the
                environnment MinGW.

     *

        Version 3.3.0
                Add the functions calceph_getfileversion.

                Fix a regression to open some old JPL DE format files.

                Fix a compiler warning in the file util.c.

                Support the segments 8, 9, 17 and 21 in the SPICE kernel
                file.

                Check the validity of the number of constants in the
                original INPOP/DE files.

                For the Python interface, the functions compute??? and
                orient??? supports now a list or numpy's array for the
                time parameters.

     *

        Version 3.2.0
                Fix the creation of the dynamic library with msys/mingw on
                Windows.

                Fix the returned value of the functions
                f90calceph_getconstantvd and f90calceph_getconstantvs.

                Fix a compilation warning with the GNU C compilers 8.0 or
                later.

                Support the original JPL files with TT-TDB or with a large
                number of constants.

                Support the IAU 1980 Nutation Angles of the JPL files.

                Add the NAIF identification numbers for DIA, KERBEROS,
                STYX and SIDING SPRING.

                Add the option installnodoc to the make command.

     *

        Version 3.1.0
                Add the Mex interface compliant with Octave 4.0+ and
                Matlab 2017+.

                Add the functions calceph_getconstantsd,
                calceph_getconstantvd and calceph_getconstantss and
                calceph_getconstantvs.

                Fix a compilation problem with MinGW if the terminal
                cmd.exe is used.

                Fix a wrong function name open_array instead of open in
                the documentation of the Python interface.

                Fix the return value of the functions calceph_orient_xxx
                when the unit CALCEPH_UNIT_RAD is not provided.

                The return value of the function
                calceph_(s)getconstant(index) is the number of values
                associated to the constant.

                Display a better message for the unsupported old spice
                kernel (NAIF/DAF)

     *

        Version 3.0.0
                Update the license CeCILL v2.0 to CeCILL v2.1.

                Fix a decode error for SPICE kernels with a big-endian
                format.

                Add the function calceph_gettimescale and
                calceph_gettimespan.

                Add the function calceph_getpositionrecordcount and
                calceph_getpositionrecordindex.

                Add the function calceph_getorientrecordcount and
                calceph_getorientrecordindex.

                Add the function calceph_sgettimescale and
                calceph_sgettimespan.

                Support INPOP file format 3.0 (add angular momentum due to
                the rotation in the binary file).

                Use sphinx-doc to produce the documentation.

     *

        Version 2.3.2
                Fix the return value of the function calceph_getconstant
                if the constant name "AU" or "EMRAT" is not available.

                Fix the documentation for the fortran interface of the
                function calceph_prefetch.

                Fix the return value of the function calceph_orient_unit
                if the frame SPICE kernel file is missing.

     *

        Version 2.3.1
                Fix the compilation warnings with the Pelles compiler.

                Fix the compilation warnings with the C89 standard.

                Fix the compilation warnings with the GNU C compilers.

                Fix the documentation for the constant
                CALCEPH_VERSION_STRING.

     *

        Version 2.3.0
                Add the python interface compliant with python 2.6+ and
                python 3.

                Add the preprocessor macro CALCEPH_VERSION_STRING.

                Add the function calceph_getversion_str.

                Add the function calceph_compute_order and
                calceph_orient_order.

                Fix the return value of the functions calceph_compute_xxx
                when the reference frame is not available in the spice
                kernel files.

                The function should produce an error and return 0 (before
                the function performed no computation but it returned 1).

     *

        Version 2.2.5
                Fix an incorrect result if CALCEPH_UNIT_DAY is provided to
                calceph_compute_unit and the target is TCG-TCB or TT-TDB.

                Support the numerical constants declared without
                parenthesis in the text kernel files (.tpc).

                Support the segment 1, 12 and 13 in the SPICE kernel file.

     *

        Version 2.2.4
                Update the version number of the dynamic library.

     *

        Version 2.2.3
                Add the predefined constants for calceph version in the
                fortran interface.

                Fix the build chain if calceph is compiled from another
                folder.

     *

        Version 2.2.2
                Support the compilation in the standard C89.

     *

        Version 2.2.1
                Remove debug informations that are printed when errors
                occur in calceph_?compute_???.

                Support the Portland compilers.

                Fix the info documentation.

                Report an error if no asteroid is available in an
                ephemeris file with the INPOP file format (instead of a
                crash).

     *

        Version 2.2.0
                Support the new segments 20, 102, 103 and 120 in the SPICE
                kernel file.

                Support the NAIF identification numbers.

                Add the functions calceph_orient_unit and
                calceph_prefetch.

     *

        Version 2.1.0
                Fix a bug in calceph_getconstant and calceph_sgetconstant
                with an invalid name

                Remove the null character in the name of the constant
                returned by the function (f90)calceph_(s)getconstantindex
                when the Fortran interface is used.

     *

        Version 2.0.0
                Fix memory leaks in calceph_open when errors occur.

                Support INPOP file format 2.0 (supports TCB ephemeris file
                and add asteroids in the binary file).

                Add the function calceph_open_array and
                calceph_compute_unit.

                Add the tools calceph_inspector to show details about
                ephemeris file.

                Support SPICE kernel file (SPK with segment 2 or 3, text
                and binary PCK, meta kernel, basic frame kernel).

                Improve the performances.

                Correct the Fortran 2003 interface for
                calceph_sgetconstantindex.

                Add the constant 17 to get TCG-TCB from TCB ephemeris
                file.

     *

        Version 1.2.0
                Change the licensing : triple licenses to support
                integration in BSD software.

                Remove explicit dependencies on the record size for DExxx.

     *

        Version 1.1.2
                Fix a compilation warning with oracle studio compiler 12.

                Fix a bug with gcc on solaris in 64 bit mode.

                Fix the copyright statements.

     *

        Version 1.1.1
                Fix a compilation error in util.h and a warning with the
                sun studio compilers.

     *

        Version 1.1.0
                Add the function calceph_seterrorhandler for the custom
                error handlers.

     *

        Version 1.0.3
                Support the JPL ephemeris file DE423.

     *

        Version 1.0.2
                Fix memory leaks in the fortran-90 interface.

     *

        Version 1.0.1
                Support the large ephemeris files (>2GB) on 32-bit
                operating systems.

                Fix the documentation of the function f90calceph_sopen.

                Fix an invalid open mode on Windows operating systems.

                Report accurately the I/O errors.

     *

        Version 1.0.0
                Initial release.

   Next Previous
     __________________________________________________________________

   © Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
   2018, 2019, CNRS, Observatoire de Paris, Observatoire de la Côte
   d'Azur.
    #Index Search CALCEPH - Fortran 2003 language 3.4.0 documentation
   CALCEPH Library Copying conditions Release notes

   CALCEPH - Fortran 2003 language
   3.4.0
   ____________________
     * Introduction
     * Installation
     * Library interface
     * Multiple file access functions
     * Single file access functions
     * Error functions
     * Miscellaneous functions
     * NAIF identification numbers
     * Release notes
     * Reporting bugs
     * CALCEPH Library Copying conditions

   Index

   CALCEPH - Fortran 2003 language
     * Docs »
     * Reporting bugs
     *
     __________________________________________________________________

Reporting bugs¶

   If you think you have found a bug in the CALCEPH Library, first have a
   look on the CALCEPH Library web page http://www.imcce.fr/inpop, in
   which case you may find there a workaround for it. Otherwise, please
   investigate and report it. We have made this library available to you,
   and it seems very important for us, to ask you to report the bugs that
   you find.

   There are a few things you should think about when you put your bug
   report together. You have to send us a test case that makes it possible
   for us to reproduce the bug. Include instructions on the way to run the
   test case.

   You also have to explain what is wrong; if you get a crash, or if the
   results printed are incorrect and in that case, in what way.

   Please include compiler version information in your bug report. This
   can be extracted using cc -V on some machines, or, if you're using gcc,
   gcc -v. Also, include the output from uname -a and the CALCEPH version.

   Send your bug report to: inpop.imcce@obspm.fr. If you think something
   in this manual is unclear, or downright incorrect, or if the language
   needs to be improved, please send a note to the same address.

   Next Previous
     __________________________________________________________________

   © Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
   2018, 2019, CNRS, Observatoire de Paris, Observatoire de la Côte
   d'Azur.
    #Index Search CALCEPH - Fortran 2003 language 3.4.0 documentation
   Reporting bugs

   CALCEPH - Fortran 2003 language
   3.4.0
   ____________________
     * Introduction
     * Installation
     * Library interface
     * Multiple file access functions
     * Single file access functions
     * Error functions
     * Miscellaneous functions
     * NAIF identification numbers
     * Release notes
     * Reporting bugs
     * CALCEPH Library Copying conditions

   Index

   CALCEPH - Fortran 2003 language
     * Docs »
     * CALCEPH Library Copying conditions
     *
     __________________________________________________________________

CALCEPH Library Copying conditions¶

   Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
   2018, 2019,

   CNRS, Observatoire de Paris, Observatoire de la Côte d'Azur

   Contributed by

   Gastineau M. , Laskar J., Manche H., Astronomie et Systèmes Dynamiques,
   IMCCE, CNRS, Observatoire de Paris, UPMC

   Fienga A. , Observatoire de la Côte d'Azur

   inpop.imcce@obspm.fr

   This library is governed by the CeCILL-C,CeCILL-B or CeCILL version 2
   license under French law and abiding by the rules of distribution of
   free software. You can use, modify and/ or redistribute the software
   under the terms of the CeCILL-C,CeCILL-B or CeCILL version 2 license as
   circulated by CEA, CNRS and INRIA at the following URL
   "http://www.cecill.info".

   As a counterpart to the access to the source code and rights to copy,
   modify and redistribute granted by the license, users are provided only
   with a limited warranty and the software's author, the holder of the
   economic rights, and the successive licensors have only limited
   liability.

   In this respect, the user's attention is drawn to the risks associated
   with loading, using, modifying and/or developing or reproducing the
   software by the user in light of its specific status of free software,
   that may mean that it is complicated to manipulate, and that also
   therefore means that it is reserved for developers and experienced
   professionals having in-depth computer knowledge. Users are therefore
   encouraged to load and test the software's suitability as regards their
   requirements in conditions enabling the security of their systems
   and/or data to be ensured and, more generally, to use and operate it in
   the same conditions as regards security.

   The fact that you are presently reading this means that you have had
   knowledge of the CeCILL-C,CeCILL-B or CeCILL version 2 license and that
   you accept its terms.

   Previous
     __________________________________________________________________

   © Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
   2018, 2019, CNRS, Observatoire de Paris, Observatoire de la Côte
   d'Azur.
    #Index Search CALCEPH - Python language 3.4.0 documentation Library
   interface Introduction

   CALCEPH - Python language
   3.4.0
   ____________________
     * Introduction
     * Installation
          + Quick instructions for installing on a Unix-like system
            (Linux, Mac OS X, BSD, Cygwin, ...)
          + Detailed instructions for installing on a Unix-like system
            (Linux, Mac OS X, BSD, Cygwin, ...)
               o Other make Targets
          + Installation on Windows system
               o Using the Microsoft Visual C++ compiler
               o Using the MinGW
     * Library interface
     * Multiple file access functions
     * Error functions
     * Miscellaneous functions
     * NAIF identification numbers
     * Release notes
     * Reporting bugs
     * CALCEPH Library Copying conditions

   Index

   CALCEPH - Python language
     * Docs »
     * Installation
     *
     __________________________________________________________________

Installation¶

Quick instructions for installing on a Unix-like system (Linux, Mac OS X,
BSD, Cygwin, ...)¶

   Here are the quick steps needed to install the library on Unix systems.
   In the following instructions, you must replace /home/mylogin/mydir by
   the directory location where you want to install calceph.

   If you use the python interface of the library and the pip package
   management system, the steps are :

     * Install the requirements

pip install Cython setuptools numpy

     * Install the library

pip install calcephpy

   If you use the python interface of the library, it requires that the
   packages cython, setuptools and numpy are already installed and the
   steps are :

tar xzf calceph-3.4.0.tar.gz
cd calceph-3.4.0
./configure --enable-python=yes --enable-python-package-user=yes --prefix=/home/
mylogin/mydir
make check && make install

   If you use the gcc and gfortran compilers, the steps are :

tar xzf calceph-3.4.0.tar.gz
cd calceph-3.4.0
./configure --disable-shared CC=gcc FC=gfortran --prefix=/home/mylogin/mydir
make check && make install

   If you use the Intel c++ and fortran compilers, the steps are :

tar xzf calceph-3.4.0.tar.gz
cd calceph-3.4.0
./configure --disable-shared CC=icc FC=ifort --prefix=/home/mylogin/mydir
make check && make install

Detailed instructions for installing on a Unix-like system (Linux, Mac OS X,
BSD, Cygwin, ...)¶

   You need a C compiler, such as gcc.

   A fortran compiler, compliant with the ANSI Fortran 77 specifications,
   is required to compile the fortran-77/90/95 interface of the library.

   A fortran compiler, compliant with the Fortran 2003 specifications, is
   required to compile the fortran-2003 interface of the library.

   A python interpreter, compliant at least with with the Python 2.6 or
   Python 3.0 specifications, and the package Cython, setuptools and numpy
   are required to compile the python interface of the library.

   And you need a standard Unix make program, plus some other standard
   Unix utility programs.

   Here are the detailed steps needed to install the library on Unix
   systems:
     * tar xzf calceph-3.4.0.tar.gz
     * cd calceph-3.4.0
     * ./configure

     Running configure might take a while. While running, it prints some
     messages telling which features it is checking for.
     configure recognizes the following options to control how it
     operates.
          + --enable-fortran={yes|no}
            Enable or disable the fortran-77 and fortran-2003 interface.
            The default is yes.
          + --enable-python={yes|no}
            Enable or disable the python interface. The default is no.
          + --enable-python-package-system={yes|no}
            Enable or disable the installation of the python package to
            the system site-packages directory (e.g.,
            /usr/lib/python3.4/sites-packages/) . The default is no.
          + --enable-python-package-user={yes|no}
            Enable or disable the installation of the python package to
            the user site-packages directory (e.g.,
            ~/.local/lib/python3.4/site-packages/) . The default is no.
          + --enable-thread={yes|no}
            Enable or disable the thread-safe version of the functions
            calcephpy.CalcephBin.sopen() and
            calcephpy.CalcephBin.scompute(), ... and concurrent access to
            the function calcephpy.CalcephBin.compute(), .... The default
            is no.
          + --disable-shared
            Disable shared library.
          + --disable-static
            Disable static library.
          + --help
            Print a summary of all of the options to configure, and exit.
          + --prefix= dir
            Use dir as the installation prefix. See the command make
            install for the installation names.

     The default compilers could be changed using the variable CC for C
     compiler, FC for the Fortran compiler and PYTHON for the python
     interpreter. The default compiler flags could be changed using the
     variable CFLAGS for C compiler and FCFLAGS for the Fortran compiler.
     If --enable-python=yes, we recommend to set
     --enable-python-package-user=yes ( or
     --enable-python-package-system=yes if you have administrative right
     on the system directory) in order to that the python interpreter
     finds the CALCEPH python package.

     * make

     This compiles the CALCEPH Library in the working directory.
     * make check

     This will make sure that the CALCEPH Library was built correctly.
     If you get error messages, please report them to
     inpop.imcce@obspm.fr (see Reporting bugs, for information on what to
     include in useful bug reports).
     * make install

     This will copy the files calceph.h, calceph.mod and f90calceph.h to
     the directory /usr/local/include, the file libcalceph.a,
     libcalceph.so to the directory /usr/local/lib, and the
     documentations files to the directory /usr/local/doc/calceph/ (or if
     you passed the --prefix option to configure, using the prefix
     directory given as argument to --prefix instead of /usr/local).
     Note: you need write permissions on these directories.
     If the python interface is enabled and
     enable-python-package-system=yes or enable-python-package-user=yes,
     the python package will be copied to system or user python
     site-package.
     * If you want to enable the mex interface

          + If you don't install in a standard path, add dir/lib to the
            environment variables LD_LIBRARY_PATH or DYLD_LIBRARY_PATH.
          + Add the path /usr/local/libexec/calceph/mex to the environment
            variable MATLABPATH
          + If you use Matlab, start Matlab and execute the following
            command in order to compile the Mex interface:

calceph_compilemex()

          + If you use Octave, start Octave and execute the following
            command in order to compile the Mex interface:

addpath('/usr/local/libexec/calceph/mex')
calceph_compilemex()

Other make Targets¶

   There are some other useful make targets:
     * clean

     Delete all object files and archive files, but not the configuration
     files.
     * distclean

     Delete all files not included in the distribution.
     * installnodoc

     Same as install, except that the documentation is not installed.
     * uninstall

     Delete all files copied by make install.

Installation on Windows system¶

Using the Microsoft Visual C++ compiler¶

   You need the Microsoft Visual C++ compiler, such as cl.exe, and the
   Universal CRT SDK or a Windows SDK. A fortran compiler, compliant with
   the ANSI Fortran 77 specifications, is required to compile the
   fortran-77/90/95 interface of the library. A fortran compiler,
   compliant with the Fortran 2003 specifications, is required to compile
   the fortran-2003 interface of the library.

   The "Universal CRT (C runtime) SDK" or a "Windows SDK" are now provided
   with the Microsoft Visual Studio. You should verify that "Universal CRT
   (C runtime) SDK" or a "Windows SDK" is selected in the "Visual Studio
   Installer".

   If you use the python interface of the library and the pip package
   management system, the steps are :

     * Execute the script 'vcvars32.bat' or vcvars64.bat' depending on the
       Windows version.
       Theses scripts are located in the directory
       "C:\Program Files (x86)\Microsoft Visual Studio..."
       They are usually located in

     "C:\Program Files (x86)\Microsoft Visual
     Studio\2017\Community\VC\Auxiliary\Build"
     or
     "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC".
       Depending on your Python version, the Microsoft Visual C++ compiler
       must be the same version of the compiler that was used to build
       Python itself should be used.
     * Install the requirements

pip install Cython setuptools numpy

     * Install the library

pip install calcephpy

   If you use the C, Fortran, or mex interface, the steps are :
     * Expand the file calceph-3.4.0.tar.gz
     * Execute the command :cmd.exe from the menu Start / Execute...

     This will open a console window
     * cd dir\calceph-3.4.0

     Go to the directory dir where CALCEPH Library has been expanded.
     * nmake /f Makefile.vc

     This compiles CALCEPH Library in the working directory. This command
     line accepts several options :
          + CC= xx

     specifies the name of the C compiler. The defaut value is cl.exe
          + FC= xx

     specifies the name of the Fortran compiler. The defaut value is
     gfortran.exe
          + F77FUNC= naming

     specifies the naming convention of the fortran 77 compiler.
     The possible value are: x, X, x##_ , X##_.
          + ENABLEF2003={0|1}

     specifies if it must compile the fortran 2003 interface. The defaut
     value is 0.
          + ENABLEF77={0|1}

     specifies if it must compile the fortran 77/90/95 interface. The
     defaut value is 0.

     * nmake /f Makefile.vc check

     This will make sure that the CALCEPH Library was built correctly.
     If you get error messages, please report them to
     inpop.imcce@obspm.fr (see Reporting bugs, for information on what to
     include in useful bug reports).
     This command line accepts several options :
          + CC= xx

     specifies the name of the C compiler. The defaut value is cl.exe
          + FC= xx

     specifies the name of the Fortran compiler. The defaut value is
     gfortran.exe
          + F77FUNC= naming

     specifies the naming convention of the fortran 77 compiler.
     The possible value are: x, X, x##_ , X##_.
          + ENABLEF2003={0|1}

     specifies if it must compile the fortran 2003 interface. The defaut
     value is 0.
          + ENABLEF77={0|1}

     specifies if it must compile the fortran 77/90/95 interface. The
     defaut value is 0.

     * nmake /f Makefile.vc install DESTDIR= dir

     This will copy the file calceph.h, calceph.mod and f90calceph.h to
     the directory dir, the file libcalceph.lib to the directory dir
     \lib, the documentation files to the directory dir \doc. Note: you
     need write permissions on these directories.

   This command line accepts several options :

     * CC= xx

     specifies the name of the C compiler. The defaut value is cl.exe
     * FC= xx

     specifies the name of the Fortran compiler. The defaut value is
     gfortran.exe
     * F77FUNC= naming

     specifies the naming convention of the fortran 77 compiler.
     The possible value are: x, X, x##_ , X##_.
     * ENABLEF2003={0|1}

     specifies if it must compile the fortran 2003 interface. The defaut
     value is 0.
     * ENABLEF77={0|1}

     specifies if it must compile the fortran 77/90/95 interface. The
     defaut value is 0.

     * If you want to enable the mex interface

          + If you don't install in a standard path, add dir \lib to the
            environment variables LD_LIBRARY_PATH or DYLD_LIBRARY_PATH.
          + Add the path dir \libexec\calceph\mex to the environment
            variable MATLABPATH
          + Start Matlab or Octave and execute the following command in
            order to compile the Mex interface:

addpath('dir \libexec\calceph\mex')
calceph_compilemex()

Using the MinGW¶

   You need a C compiler, such as gcc.exe.

   A fortran compiler, compliant with the ANSI Fortran 77 specifications,
   is required to compile the fortran-77/90/95 interface of the library.

   A fortran compiler, such as gfortran.exe, compliant with the Fortran
   2003 specifications, is required to compile the fortran-2003 interface
   of the library.

   A python interpreter, compliant at least with the Python 2.6 or Python
   3.0 specifications, and the package Cython, setuptools and numpy are
   required to compile the python interface of the library.

   If you use the python interface of the library and the pip package
   management system, the steps are :

     * Install the requirements

pip install Cython setuptools numpy

     * Install the library

pip install calcephpy

   If you use the C, Fortran, or mex interface, the steps are :
     * Expand the file calceph-3.4.0.tar.gz
     * Execute the command MinGW Shell from the menu Start.

     This will open a MinGW Shell console window.
     * cd dir\calceph-3.4.0

     Go to the directory dir where CALCEPH Library has been expanded.
     * make -f Makefile.mingw

     This compiles CALCEPH Library in the working directory.
     This command line accepts several options :
          + CC= xx

     specifies the name of the C compiler. The defaut value is gcc.exe
          + FC= xx

     specifies the name of the Fortran compiler. The defaut value is
     gfortran.exe
          + PYTHON= xx

     specifies the name of the Python interpreter. The defaut value is
     python.exe
          + F77FUNC= naming

     specifies the naming convention of the fortran 77 compiler.
     The possible value are: x, X, x##_ , X##_.
          + ENABLEF2003={0|1}

     specifies if it must compile the fortran 2003 interface. The defaut
     value is 0.
          + ENABLEF77={0|1}

     specifies if it must compile the fortran 77/90/95 interface. The
     defaut value is 0.
          + ENABLEPYTHON={0|1}

     specifies if it must compile the python interface. The defaut value
     is 0.
     * make -f Makefile.mingw check

     This will make sure that the CALCEPH Library was built correctly.
     If you get error messages, please report them to
     inpop.imcce@obspm.fr (see Reporting bugs , for information on what
     to include in useful bug reports).
     This command line accepts several options :
          + CC= xx

     specifies the name of the C compiler. The defaut value is gcc.exe
          + FC= xx

     specifies the name of the Fortran compiler. The defaut value is
     gfortran.exe
          + PYTHON= xx

     specifies the name of the Python interpreter. The defaut value is
     python.exe
          + F77FUNC= naming

     specifies the naming convention of the fortran 77 compiler.
     The possible value are: x, X, x##_ , X##_.
          + ENABLEF2003={0|1}

     specifies if it must compile the fortran 2003 interface. The defaut
     value is 0.
          + ENABLEF77={0|1}

     specifies if it must compile the fortran 77/90/95 interface. The
     defaut value is 0.
          + ENABLEPYTHON={0|1}

     specifies if it must compile the python interface. The defaut value
     is 0.
     * make -f Makefile.mingw install DESTDIR= dir

     This will copy the file calceph.h, calceph.mod and f90calceph.h to
     the directory dir, the file libcalceph.lib to the directory dir
     \lib, the documentation files to the directory dir \doc.

   If ENABLEPYTHON=1, the installation will copy the of the CALCEPH python
   package to the system python site package (e.g.,
   C:\Python27\Lib\sites-packages\) in order to that the python
   interpreter finds the CALCEPH module.

   Note: you need write permissions on these directories.

   This command line accepts several options :

     * CC= xx

     specifies the name of the C compiler. The defaut value is gcc.exe
     * FC= xx

     specifies the name of the Fortran compiler. The defaut value is
     gfortran.exe
     * PYTHON= xx

   specifies the name of the Python interpreter. The defaut value is
   python.exe
     * F77FUNC= naming

     specifies the naming convention of the fortran 77 compiler.
     The possible value are: x, X, x##_ , X##_.
     * ENABLEF2003={0|1}

     specifies if it must compile the fortran 2003 interface. The defaut
     value is 0.
     * ENABLEF77={0|1}

     specifies if it must compile the fortran 77/90/95 interface. The
     defaut value is 0.
     * ENABLEPYTHON={0|1}

   specifies if it must compile the python interface. The defaut value is
   0.

     * If you want to enable the mex interface

          + If you don't install in a standard path, add dir \lib to the
            environment variables LD_LIBRARY_PATH or DYLD_LIBRARY_PATH.
          + Add the path dir \libexec\calceph\mex to the environment
            variable MATLABPATH
          + Start Matlab or Octave and execute the following command in
            order to compile the Mex interface:

addpath('dir \libexec\calceph\mex')
calceph_compilemex()

   Next Previous
     __________________________________________________________________

   © Copyright 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
   2018, 2019, CNRS, Observatoire de Paris, Observatoire de la Côte
   d'Azur.
